{
  "swagger": "2.0",
  "info": {
    "title": "api/proto/user/v1/user.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserExternalAPI"
    },
    {
      "name": "UserInternalAPI"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user/api/v1/user": {
      "post": {
        "summary": "Create User.",
        "description": "```\nExample request:\n   name: 'Artem'\n   email: 'email@mail.com'\n   password: 'password'\n```\n\n```\nExample response:\n   id: 1\n   name: 'Artem'\n   email: 'email@mail.com'\n   password: 'password'\n```\n\nSpecific codes:\n   * codes.InvalidArgument\n   * codes.AlreadyExists",
        "operationId": "UserExternalAPI_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserExternalAPI"
        ]
      }
    },
    "/user/api/v1/user/{id}": {
      "get": {
        "summary": "Get User by ID.",
        "description": "```\nExample request:\n   id: 1\n```\n\n```\nExample response:\n   id: 1\n   name: 'Artem'\n   email: 'email@mail.com'\n```\n\nSpecific codes:\n   * codes.NotFound",
        "operationId": "UserExternalAPI_GetUserByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "UserExternalAPI"
        ]
      },
      "delete": {
        "summary": "Delete User by ID.",
        "description": "```\nExample request:\n   id: 1\n```\n\n```\nExample response:\n   empty\n```\n\nSpecific codes:\n   * codes.InvalidArgument\n   * codes.NotFound",
        "operationId": "UserExternalAPI_DeleteUserByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteUserByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "UserExternalAPI"
        ]
      },
      "put": {
        "summary": "Update User by ID.",
        "description": "```\nExample request:\n   name: 'Artem'\n   email: 'email@mail.com'\n```\n\n```\nExample response:\n   id: 1\n   name: 'Artem'\n   email: 'email@mail.com'\n```\n\nSpecific codes:\n   * codes.InvalidArgument\n   * codes.NotFound",
        "operationId": "UserExternalAPI_UpdateUserByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "UserExternalAPI"
        ]
      }
    },
    "/user/api/v1/user/{id}/password": {
      "put": {
        "summary": "Update User Password by ID.",
        "description": "```\nExample request:\n   id: 1\n   oldPassword: 'qwert123'\n   newPassword: '321trewq'\n```\n\n```\nExample response:\n   empty\n```\n\nSpecific codes:\n   * codes.InvalidArgument\n   * codes.NotFound",
        "operationId": "UserExternalAPI_UpdateUserPasswordByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserPasswordByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "UserExternalAPI"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1DeleteUserByIDResponse": {
      "type": "object"
    },
    "v1GetUserByIDResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1UpdateUserByIDResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1UpdateUserPasswordByIDResponse": {
      "type": "object"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1UserByIDResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    }
  }
}
